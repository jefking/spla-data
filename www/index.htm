<html>
    <head>

    </head>
    
        <!-- bluebird only needed if this page needs to run on Internet Explorer -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bluebird/3.3.4/bluebird.min.js" class="pre"></script>
        <script src="https://secure.aadcdn.microsoftonline-p.com/lib/1.0.0/js/msal.min.js"></script>
        <script src="https://code.jquery.com/jquery-3.2.1.min.js" class="pre"></script>
    <body>
          <h2>Getting an access token with Azure AD B2C and calling a Web API</h2>
  <div>
    <div id="label">Sign-in with Microsoft Azure AD B2C</div>
    <button id="auth" onclick="login()">Login</button>
    <button id="callApiButton" class="hidden" onclick="callApi()">Call Web API</button>
  </div>

  <pre class="response"></pre>
        
      <script class="pre">

        // The current application coordinates were pre-registered in a B2C tenant.
        var appConfig = {
          b2cScopes: ["https://happyb2c.b2clogin.com/helloapi/demo.read"],
          webApi: "https://splahoster.azurewebsites.net/index.htm"
        };
      </script>
    </body>
<script>
    "use strict";

    // configuration to initialize msal
    var msalConfig = {
        auth: {
            clientId: "bcd77825-6fe4-472c-980b-62118e589d8c", //This is your client ID
            authority: "https://happyb2c.b2clogin.com/happyb2c.onmicrosoft.com/B2C_1_typical", //This is your tenant info
            validateAuthority: false
        },
        cache: {
            cacheLocation: "localStorage",
            storeAuthStateInCookie: true
        }
    };

    var clientApplication = new Msal.UserAgentApplication(msalConfig);

    // Register a call back for redirect flow
    // myMSALObj.handleRedirectCallback(authRedirectCallback);

    function login() {

      var loginRequest = {
        scopes: appConfig.b2cScopes
      };

      clientApplication.loginPopup(loginRequest).then(function (loginResponse) {
        var tokenRequest = {
          scopes: appConfig.b2cScopes
        };

        clientApplication.acquireTokenSilent(tokenRequest).then(function (tokenResponse) {
          updateUI();
        }).catch(function (error) {
          clientApplication.acquireTokenPopup(tokenRequest).then(function (tokenResponse) {
            updateUI();
          }).catch (function (error) {
            logMessage("Error acquiring the popup:\n" + error);
          });
        })
      }).catch (function (error) {
        logMessage("Error during login:\n" + error);
      });
    }

    function updateUI() {
      var userName = clientApplication.getAccount().name;
      console.log(clientApplication.getAccount());
      logMessage("User '" + userName + "' logged-in");
      var authButton = document.getElementById('auth');
      authButton.innerHTML = 'logout';
      authButton.setAttribute('onclick', 'logout();');
      var label = document.getElementById('label');
      label.innerText = "Hello " + userName;
      var callWebApiButton = document.getElementById('callApiButton');
      callWebApiButton.setAttribute('class', 'visible');
    }

    function callApi() {
      var tokenRequest = {
        scopes: appConfig.b2cScopes
      }
      clientApplication.acquireTokenSilent(tokenRequest).then(function (tokenResponse) {
        callApiWithAccessToken(tokenResponse.accessToken);
      }).catch(function (error) {
        clientApplication.acquireTokenPopup(tokenRequest).then(function (tokenResponse) {
          callApiWithAccessToken(tokenResponse.accessToken);
        }).catch(function (error) {
          logMessage("Error acquiring the access token to call the Web api:\n" + error);
        });
      })
    }

    function callApiWithAccessToken(accessToken) {
      // Call the Web API with the AccessToken
      $.ajax({
        type: "GET",
        url: appConfig.webApi,
        headers: {
          'Authorization': 'Bearer ' + accessToken,
        },
      }).done(function (data) {
        logMessage("Web APi returned:\n" + JSON.stringify(data));
      })
        .fail(function (jqXHR, textStatus) {
          logMessage("Error calling the Web api:\n" + textStatus);
        })
    }

    function logout() {
      // Removes all sessions, need to call AAD endpoint to do full logout
      clientApplication.logout();
    }

    function logMessage(s) {
      document.body.querySelector('.response').appendChild(document.createTextNode('\n' + s));
    }

  </script>
</html>
